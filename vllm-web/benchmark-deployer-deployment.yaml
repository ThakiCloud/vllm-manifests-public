apiVersion: apps/v1
kind: Deployment
metadata:
  name: benchmark-deployer
  namespace: benchmark-web
  labels:
    app: benchmark-deployer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: benchmark-deployer
  template:
    metadata:
      labels:
        app: benchmark-deployer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nodepool
                    operator: NotIn
                    values:
                      - "gpu"
      serviceAccountName: benchmark-deployer-sa
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: benchmark-deployer
        image: ghcr.io/yunjae-park1111/deployer:123123
        imagePullPolicy: Always
        ports:
        - containerPort: 8002
        env:
        - name: DEFAULT_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: benchmark-deployer-config
              key: DEFAULT_NAMESPACE
        - name: LOG_TAIL_LINES
          valueFrom:
            configMapKeyRef:
              name: benchmark-deployer-config
              key: LOG_TAIL_LINES
        - name: DEPLOYMENT_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: benchmark-deployer-config
              key: DEPLOYMENT_TIMEOUT
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: benchmark-shared-secrets
              key: MONGO_URL
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: benchmark-deployer
  namespace: benchmark-web
  labels:
    app: benchmark-deployer
spec:
  selector:
    app: benchmark-deployer
  ports:
  - port: 8002
    targetPort: 8002
    protocol: TCP
    name: http
  type: LoadBalancer

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: benchmark-deployer-sa
  namespace: benchmark-web
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: benchmark-deployer-role
  namespace: benchmark-web
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["get", "create"]
- apiGroups: [""]
  resources: ["pods/attach"]
  verbs: ["get", "create"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: benchmark-deployer-binding
  namespace: benchmark-web
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: benchmark-deployer-role
subjects:
- kind: ServiceAccount
  name: benchmark-deployer-sa
  namespace: benchmark-web

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: benchmark-deployer-config
  namespace: benchmark-web
data:
  DEFAULT_NAMESPACE: "benchmark-web"
  LOG_TAIL_LINES: "100"
  DEPLOYMENT_TIMEOUT: "600" 